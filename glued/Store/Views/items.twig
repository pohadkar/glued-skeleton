{% extends '/Core/Views/templates/default.twig' %}

{% block content %}

<div class="section-header">
  <h1>{{ __('Items') }}</h1><button type="button" class="btn btn-primary" style="margin-left: 1em;" data-toggle="modal" data-id="" data-currency="" data-name="" data-domain="" data-config="" data-description="" data-target="#store_items_create_modal">{{ __('New item') }}</button>
</div>

<div class="section-body">
  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-striped" id="store_items">
              <thead>
                <tr>
                  <th class="col-sm-1">{{ __('ID') }}</th>
                  <th class="col-sm-2">{{ __('Business name') }}</th>
                  <th class="col-sm-3">{{ __('Business addr') }}</th>
                  <th class="col-sm-2">{{ __('URI') }}</th>
                  <th class="col-sm-1">{{ __('VAT payer') }}</th>
                  <th class="col-sm-2">{{ __('Template') }}</th>
                  <th class="col-sm-1">{{ __('Manage') }}</th>
                </tr>
              </thead>
              <tbody id="store_items_placeholder">
                {% verbatim %}
                <script type="text/twig" id="store_items_obj_twig">
                
                <tr id="store_items_object_{{ row.id }}">
                
                  <td class="col-sm-1"><a href="{% endverbatim %}{{ url_for('store.items') }}{% verbatim %}/{{ row.id }}" class="stretched-link">{{ row.id }}</a></td>
                  <td class="col-sm-2">{{ row.business.name }}</td>
                  <td class="col-sm-3">{{ row.business.addr }}</td>
                  <td class="col-sm-2"><a href="{{ row.uri }}">{{ row.uri }}</a></td>
                  <td class="col-sm-1">{{ row.business.vatpayer }}</td>
                  <td class="col-sm-2">{{ row.template }}</td>
                  <td class="col-sm-1">
                    <button type="button" class="btn btn-icon btn-sm" data-toggle="modal" data-target="#store_items_update_modal" data-id="{{ row.id }}" data-type="{{ row.type }}" data-name="{{ row.name }}" data-domain="{{ row.domain }}" data-currency="{{ row.currency }}" data-description="{{ row.description }}" data-config="{{ row.config }}" data-icon="{{ row.icon }}" data-color="{{ row.color }}"><i class="fas fa-edit"></i></button><button type="button" class="btn btn-icon btn-sm" data-toggle="modal" data-target="#store_items_delete_modal" data-id="{{ row.id }}" data-type="{{ row.type }}" data-name="{{ row.name }}" data-currency="{{ row.currency }}"><i class="fas fa-trash"></i></button>
                  </td>

                </tr>
                
                </script>
                <script type="text/twig" id="store_items_col_twig">
                {% for row in data %}
                {% include "store_items_obj_twig" %}
                {% endfor %}
                </script>
                {% endverbatim %}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
{% include '/Store/Views/Partials/store_items_modal.twig' with {'store_items_id': 'store_items_create'} %}
{% include '/Store/Views/Partials/store_items_modal.twig' with {'store_items_id': 'store_items_update'} %}
{% include '/Store/Views/Partials/store_items_delete_modal.twig' with {'store_items_id': 'store_items_delete'} %}
{% endblock %}


{% block additionaljs %}
{# twig.js initialized in public/assets/js/glued.js #}
<script nonce="{{ csp_nonce.script_src }}" type="text/javascript">

  $(".colorpickerinput").colorpicker({
    format: 'hex',
    component: '.input-group-append',
  });

  //
  // Onload ajax to fetch item data
  // 
  $( document ).ready(function() {
    $.ajax({
      url: "{{ url_for('store.items.api01') }}",
      contentType: "application/json",
      dataType: 'json',
      success: function(res) {
        $("#store_items_placeholder").append(Twig.twig({ ref: "store_items_col_twig" }).render({ data: res.data }))
      }
    })
  });
  
  //
  // Create + Update + Delete modals
  // 
  $('#store_items_update_modal').on('show.bs.modal', function (event) {
    var modal = $(this)
    var e = $(event.relatedTarget) // event which triggered the modal
    modal.find('.modal-title').text('{{ __("Edit item") }} ' + e.data('id'));
    modal.find('.modal-dialog form').attr('action', '{{ url_for("store.items.api01") }}/' + e.data('id') );
    modal.find('.modal-body input[name="name"]').val(e.data('name'));
    modal.find('.modal-body #store_items_update_form_type').val(e.data('type')).trigger('change');
    modal.find('.modal-body #store_items_update_form_icon').val(e.data('icon')).trigger('change');
    modal.find('.modal-body input[name="color"]').val(e.data('color'));
    modal.find('.modal-body input[name="description"]').val(e.data('description'));
    modal.find('.modal-body #store_items_update_form_currency').val(e.data('currency')).trigger('change');
    modal.find('.modal-body #store_items_update_form_config').text(JSON.stringify(e.data('config')));
  });

  $('#store_items_create_modal').on('show.bs.modal', function (event) {
    var modal = $(this)
    var e = $(event.relatedTarget) // event which triggered the modal
    modal.find('.modal-title').text('{{ __("New item") }}');
  });

  $('#store_items_delete_modal').on('show.bs.modal', function (event) {
    var modal = $(this)
    var e = $(event.relatedTarget) // event which triggered the modal
    modal.find('.modal-title').text('{{ __("Delete item") }} ' + e.data('id'));
    modal.find('.modal-dialog form').attr('action', '{{ url_for("store.items.api01") }}/' + e.data('id') );
    modal.find('.modal-body').text('{{ __("Do you really want to delete the item:") }} ' + e.data('name') + ' (' + e.data('type') + ' ' + e.data('currency') + ')?');
  });

  //
  // Create handle
  // 
  
  $('#store_items_create_form_submit').on('click', function (event) {
      var button = $(this);           // button ktery to zmackl ma na sobe data
      event.preventDefault();
      var formData = new FormData(document.getElementById("store_items_create_form"));         // insert complete form into FormData object
      
      $.ajax({
             url : '{{ url_for("store.items.api01") }}',
             type : 'POST',
             data : formData,
             processData: false,  // tell jQuery not to process the data
             contentType: false,  // tell jQuery not to set contentType
             success : function(res) {
                var idtwig = 'store_items_obj_twig';
                $('#toast-placeholder').empty();
                $(Twig.twig({ ref: 'store_items_obj_twig' }).render({ row: res.data })).prependTo("#store_items > tbody");
                $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Store items") }}' , msg: '{{ __("New entry saved.") }}' })).appendTo("#toast-placeholder");
                $('.toast').toast('show');
                $('#store_items_create_modal').modal('toggle');
             },
             error: function(res) {
                $('#toast-placeholder').empty();
                if (res.error !== undefined) { 
                  $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Store items") }}' , msg: '{{ __("Error: ") }}' + res.error.message })).appendTo("#toast-placeholder");
                } else {
                  $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Store items") }}' , msg: '{{ __("Internetz gone?") }}' })).appendTo("#toast-placeholder");
                }
                $('.toast').toast('show');
             }
        });
  });

  //
  // Create handle
  // 
  $("#store_items_create_form").ajaxSubmit({
    data: function() {
      return $(this).serialize();
    },
    success: function(res) {
      var idtwig = 'store_items_obj_twig';
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'store_items_obj_twig' }).render({ row: res.data })).prependTo("#store_items > tbody");
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Store items") }}' , msg: '{{ __("New entry saved.") }}' })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
      $('#store_items_create_modal').modal('toggle');
    },
    error: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Store items") }}' , msg: '{{ __("Error: ") }}' + res.error.message })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    }
  });


  //
  // Update handle
  // 
  $("#store_items_update_form").ajaxSubmit({
    data: function() {
      return $(this).serialize();
    },
    headers: {
      "X-Http-Method-Override": "PATCH"
    },
    success: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Fin items") }}' , msg: '{{ __("Entry updated.") }}' })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
      $('#store_items_update_modal').modal('toggle');
      $('#store_items_placeholder').empty();
      $.ajax({
        url: "{{ url_for('store.items.api01') }}",
        contentType: "application/json",
        dataType: 'json',
        success: function(res) {
          $("#store_items_placeholder").append(Twig.twig({ ref: "store_items_col_twig" }).render({ data: res.data }))
        }
      })
    },
    error: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Fin items") }}' , msg: '{{ __("Error: ") }}' + res.error.message })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    }
  });

  //
  // Delete handle
  // 
  $("#store_items_delete_form").ajaxSubmit({
    data: function() {
      return $(this).serialize();
    },
    headers: {
      "X-Http-Method-Override": "DELETE"
    },
    success: function(res) {
      var idtwig = 'store_items_obj_twig';
      $('#toast-placeholder').empty();
      $('#store_items > tbody > #store_items_object_' + res.data.id).remove();
      $('#store_items_delete_modal').modal('toggle'); 
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Fin items") }}' , msg: '{{ __("Removed source ") }}' + res.data.id + '.' })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    },
    error: function(res) {
      $('#toast-placeholder').empty();
      $(Twig.twig({ ref: 'toasts' }).render({ title: '{{ __("Fin items") }}' , msg: '{{ __("Error: ") }}' + res.error.message })).appendTo("#toast-placeholder");
      $('.toast').toast('show');
    }
  });

  // NOTE: Make sure, that json data uses double quotes, not single quotes
  $('#store_items_form_type').change(function() {
    if ($(this).val() !== 'cash') {
      $('#store_items_form_currency').attr('disabled', 'disabled');
      if ($(this).val() === 'fio_cz') {
        $('#store_items_form_config').removeAttr('disabled').val('{\n  "token": "enter-token-here"\n}');
      }
      else if ($(this).val() === 'transferwise_com') {
        $('#store_items_form_config').removeAttr('disabled').val('{\n  "token_full": "enter-token-here",\n  "token_readonly": "enter-token-here",\n  "profile_id_personal": "enter-id-here",\n  "profile_id_business": "enter-id-here",\n  "priv_pem": "enter-private-key-here"\n}"');
      }
      else {
        $('#store_items_form_config').removeAttr('disabled').val('');
      }
    } else {
      $('#store_items_form_currency').removeAttr('disabled');
      $('#store_items_form_config').val('').attr('disabled', 'disabled');
    }
  }).trigger('change');



  </script>
  {% endblock %}
